{
    "PIN_CONF_MSG": 
    {
        // =======================================================================
        // HEADER_ELT section contains information about this PDS version
        "HEADER_ELT_a" :
        {
            "VERSION_MAJOR_a" : 1,
            "VERSION_MINOR_b" : 3
        },
        // =======================================================================
        // PROG_PINS_CFG_ELT section sets the pad configuration of PROGrammable pins
        "PROG_PINS_CFG_ELT_b" :
        {               
            // For each PROGrammable pin in this section
            // SLEW_RATE_a sets the maximum slew rate on the pin. Type: integer value between 0 and 6 (6=max drive strength)
            // PULL_UP_DOWN_b allows to add a pull-up or pull-down on the pad. Type: enum = 'none', 'down', 'up'
            // SLEEP_CFG_c allows to add a pull-up or pull-down on the pad while in sleep mode. Type: enum = 'tri', 'down', 'up', 'maintain'
            //          for the case of pads used as gpio it is also possible to maintain the current driven gpio value
            // MODE_d allows to configure the pin in tristate, functionnal mode or gpio. Type: enum = 'tri', 'func', 'gpio' 
            // GPIO_ID_e allows to assign a GPIO_ID to a given pin when configured as gpio. Type = char must be an UPPER case letter
            "GPIO_FEM_1_a" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "A"
            },
            "GPIO_FEM_2_b" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "B"
            },
            "GPIO_FEM_3_c" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "C"
            },
            "GPIO_FEM_4_d" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "D"
            },
            "GPIO_FEM_5_e" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "E"
            },
            "GPIO_FEM_6_f" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "F"
            },
            "GPIO_PDET_g" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "G"
            },
            "GPIO_PTA_TX_CONF_h" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "H"
            },
            "GPIO_PTA_RF_ACT_i" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "I"
            },
            "GPIO_PTA_STATUS_j" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "J"
            },
            "GPIO_PTA_FREQ_k" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "K"
            },
            "GPIO_WUP_l" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "func",
                    "GPIO_ID_e" : "L"
            },
            "GPIO_WIRQ_m" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "M"
            },
            "RESERVE2_n" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "O"
            }
        },
        // ======================================================================= 
        // HIF_PINS_CFG_ELT section sets the pad configuration of HIF pins
        "HIF_PINS_CFG_ELT_c" :
        {               
            // For each HIF pin in this section
            // SLEW_RATE_a sets the maximum slew rate on the pin. Type: integer value between 0 and 6 
            // PULL_UP_DOWN_b allows to add a pull-up or pull-down on the pad. Type: enum = 'none', 'down', 'up'
            // SLEEP_CFG_c allows to add a pull-up or pull-down on the pad while in sleep mode. Type: enum = 'tri', 'down', 'up'
            "SDIO_CLK_SPI_CLK_a" :
            {
                    "SLEW_RATE_a" : 6,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri"
            },
            "SDIO_CMD_SPI_MOSI_b" :
            {
                    "SLEW_RATE_a" : 6,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri"
            },
            "SDIO_D0_SPI_MISO_c" :
            {
                    "SLEW_RATE_a" : 6,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri"
            },
            "SDIO_D1_SPI_WIRQ_d" :
            {
                    "SLEW_RATE_a" : 6,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri"
            },
            "SDIO_D2_HIF_SEL_e" :
            {
                    "SLEW_RATE_a" : 6,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri"
            },
            "SDIO_D3_SPI_CSN_f" :
            {
                    "SLEW_RATE_a" : 6,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri"
            }
        }
    },
    
    
    "CLOCK_CONF_MSG":
    {
        "HF_CLK_e" :
        {
            // XTAL_CFG_a allows to fine tune XTAL Oscillator frequency
            // CTUNE_FIX_a allows to set a high value capacitance on both Xi and Xo. Type: interger between 0 and 3 (default =3)
            // CTUNE_XI_b allows to fine tune the capacitor on pin XTAL_I. Type: integer between 0 and 255 (default = 140)
            // CTUNE_XO_c similar to CTUNE_XI for XTAL_O pin
            "XTAL_CFG_a" :
            {
                    "CTUNE_FIX_a" : 3,
                    "CTUNE_XI_b" : 110,
                    "CTUNE_XO_c" : 110
            }
        }
    },
    
    "POWER_CONF_MSG":
    {
        // =======================================================================
        // Tx power-related information
        "MAX_TX_POWER_CONF_h":
        {
            // Each triplet gives the max Tx power value in OFDM and in CCK/DSSS vs. the channel number
            // UP_TO_CHANNEL_NUMBER_a indicates the channel number up to which the max Tx power value is applicable. Type: integer between 1 and 14
            // OFDM_b indicates the max Tx power value in quarters of dBm for the OFDM mode. Type: signed integer between -128 and 127
            // CCK_DSSS_c indicates the max Tx power value in quarters of dBm for the CCK/DSSS mode. Type: signed integer between -128 and 127
            // Resultant covered range in dBm: [-32; 31.75]
            "MAX_OUTPUT_POWER_QDBM_a":
            [
                {
                "UP_TO_CHANNEL_NUMBER_a" : 1,
                "OFDM_b" : 76,
                "CCK_DSSS_c" : 76
                },
                {
                "UP_TO_CHANNEL_NUMBER_a" : 10,
                "OFDM_b" : 76,
                "CCK_DSSS_c" : 76
                },
                {
                "UP_TO_CHANNEL_NUMBER_a" : 14,
                "OFDM_b" : 76,
                "CCK_DSSS_c" : 76
                }
            ],

            // Front-end loss (loss between the chip and the antenna) in quarters of dB. Type: signed integer between -128 and 127
            // Resultant covered range in dB: [-32; 31.75]
            "FRONT-END_LOSS_CORRECTION_QDB_b" : 0,

            // Backoff vs. Mod
            // MOD = ALC index, from 0 to 10
            // Backoff is given in quarters of dB. Type : unsigned integer. Covered range in dB: [0; 63.75]
            "BACKOFF_QDB_c":
            [
                {
                "MOD_a" : "DSSS",
                "BACKOFF_VAL_b" : 0
                },
                {
                "MOD_a" : "CCK",
                "BACKOFF_VAL_b" : 0
                },
                {
                "MOD_a" : "BPSK_1_2",
                "BACKOFF_VAL_b" : 0
                },
                {
                "MOD_a" : "BPSK_3_4",
                "BACKOFF_VAL_b" : 0
                },
                {
                "MOD_a" : "QPSK_1_2",
                "BACKOFF_VAL_b" : 0
                },
                {
                "MOD_a" : "QPSK_3_4",
                "BACKOFF_VAL_b" : 0
                },
                {
                "MOD_a" : "QAM16_1_2",
                "BACKOFF_VAL_b" : 0
                },
                {
                "MOD_a" : "QAM16_3_4",
                "BACKOFF_VAL_b" : 0
                },
                {
                "MOD_a" : "QAM64_1_2",
                "BACKOFF_VAL_b" : 0
                },
                {
                "MOD_a" : "QAM64_3_4",
                "BACKOFF_VAL_b" : 0
                },
                {
                "MOD_a" : "QAM64_5_6",
                "BACKOFF_VAL_b" : 0
                }
            ]
        }
    },

    "RF_CONF_MSG":
    {
        
        "RF_ANTENNA_SEL_DIV_CONF_j" :
        {
            // Antenna selection : Type: enum 'TX1_RX1', 'TX2_RX2', 'TX1_RX2', 'TX2_RX1' or 'TX1&2_RX1&2'
            "RF_PORTS_a" : "TX1_RX1",
            
            // Diversity control mode : Type: enum 'OFF', 'INTERNAL' or 'EXTERNAL'
            // for the 'INTERNAL' case then 'RF_PORTS_a' above must be set to 'TX1&2_RX1&2'
            "DIVERSITY_b" : "OFF"
            
            // External switch control antenna 
            /* Unused so far
            "EXT_SWITCH_CONTROL_c" :
            {
                "NB_ANTENNA_a" : 3,
                "NB_GPIO_b" : 3,
                "GPIO_ID_1_c" : ["A", 1, 0, 0], // [GPIO_ID, State Antenna_1, State Antenna_2, State Antenna_3]  
                "GPIO_ID_2_d" : ["B", 0, 1, 0],
                "GPIO_ID_3_e" : ["C", 0, 0, 1]
            }
            */
        }
    },
    
    "TEST_CONF_MSG":
    {
        /* 
        "TEST_FEATURE_CFG_ELT_i":
        {
            // TEST_CHANNEL_a selects the Wi-Fi channel to use: integer between 1 and 14
            // TEST_MODE_b selects the activated test feature: enum = 'rx', 'tx_packet', 'tx_cw' 
            // TEST_IND_f period in ms at which an indication message is sent.
            //       In the case of rx test, it returns the measurement results (PER)
            // CFG_TX_CW_c : additional configuration for tx_cw mode
            // CFG_TX_PACKET_d : additional configuration for tx_packet mode
            // RX_e : additional configuration for rx mode
            "TEST_CHANNEL_a" : 11,
            "TEST_MODE_b"    : "tx_packet",
            "TEST_IND_f"     : 1000,

            // MODE_a CW mode: enum 'single' or 'dual'
            // FREQ1_b frequency offset -31 to 31 (in 312.5kHz)
            // FREQ2_c frequency offset -31 to 31 (in 312.5kHz)
            "CFG_TX_CW_c" :
            {
                "MODE_a" : "single",
                "FREQ1_b": 1,
                "FREQ2_c": 2
            },

            // FRAME_SIZE_BYTE_a frame size in byte (without CRC) from 25 to 4091
            // IFS_US_b interframe spacing in us from 0 to 255
            // HT_PARAM_c HT format (mixed mode or greenfield), enum: 'MM' or 'GF'
            // RATE_d rate selection, enum : 'B_1Mbps', 'B_2Mbps', 'B_5.5Mbps', 'B_11Mbps'
            //     'G_6Mbps', 'G_9Mbps', 'G_12Mbps', 'G_18Mbps', 'G_24Mbps', 'G_36Mbps', 'G_48Mbps', 'G_54Mbps'
            //     'N_MCS0', N_MCS1', N_MCS2', N_MCS3', N_MCS4', N_MCS5', N_MCS6', N_MCS7' 
            // NB_FRAME_e number of frames to send before stopping. 0 means infinite. integer from 0 to 65535.
            "CFG_TX_PACKET_d":
            {
                "FRAME_SIZE_BYTE_a" : 3000,
                "IFS_US_b" : 0,
                "HT_PARAM_c" : "MM",
                "RATE_d" : "N_MCS7",
                "NB_FRAME_e" : 0
            }
        }
        */
    }
    
    /*
    // Coexistence PTA configuration
    // 
    // This section can be commented if PTA is not used
	// to activate PTA :
	//   * uncomment this section
	//   * set GPIO_PTA_TX_CONF_h pull down and mode func
	//   * set GPIO_PTA_RF_ACT_i mode func
	//   * set GPIO_PTA_STATUS_j mode func
	//   * set GPIO_PTA_FREQ_k mode func
    "PTA_CONF_MSG":
    {
        "PTA_CFG_ELT_k":
        {
            // PTA Mode selection
            // 0 : No PTA                            
            // 1 : 2-Wire           
            // 2 : 3-Wire 
            "PDS_PTA_MODE_a" : 2,

			// PTA settings :
			// setting the EnOverrideBt bit to 1 indicate the BT grant could be broken if WLAN won the arbitration
			// setting the NoCombine bit to 1 forces EPTA 
			// setting the GrantBt bit to 1 allows BT to override WLAN
			// setting the GrantWlan bit to 1 allows WLAN to override BT
			// setting the ProtectWlanRx bit to 1 prevents BT to be granted when WLAN is receiving a response
			// setting the ProtectWlanTx bit to 1 prevents BT to be granted when WLAN is transmitting
			// setting the TxConfControl bit to 1 specifies the TX conf value
            "PDS_PTA_SETTINGS_b" : "b 0101 0110",
            //                        |||| |||+ EnOverrideBt:1
            //                        |||| ||+  NoCombine:1
            //                        |||| |+   GrantBt:1
            //                        |||| +    GrantWlan:1
            //                        |||+      ProtectWlanRx:1
            //                        ||+       ProtectWlanTx:1
            //                        |+        TxConfControl:1
            //                        +         Reserved:1

			// PTA invert pin selection 
			// when a bit is set to 1, the pin logic is inverted
            "PDS_PTA_PIN_INVERT_c" : "b 0000 0000",
            //                          |||| |||+ invert PTA_RF_ACT  (input)
            //                          |||| ||+  invert PTA_STATUS  (input)
            //                          |||| |+   invert PTA_FREQ    (input)
            //                          |||| +    invert PTA_TX_CONF (input)
            //                          |||+      invert PTA_FREQ    (output)
            //                          ||+       invert PTA_TX_CONF (output)
            //                          ++        Reserved:2

			// TX conf valid time it the time in us from BT_RF_ACTIVE to TX_CONF assertion
            "PDS_PTA_TX_CONF_TIMING_d" : "x 48",
            //                              ++ TXConfValideTime:7
            //                              +  Reserved:1

			// Priority sampling time is the time in us after BT_RF_ACTIVE when BT_FREQ should be sampled
			// TX RX sampling time is the time in us from BT_RF_ACTIVE to the sampling if TXRX
            "PDS_PTA_STATUS_TIMING_e" : "x 3209",
            //                             ||++ PrioritySamplingTime:8
            //                             ++   TxRxSamplingTime:8

			// priority matrix given for BT
            "PDS_PTA_PRIORITY_f" : "x 61"
            //                        |+ Priority 0:4
            //                        +  Priority 1:4
        }
    } 
    */
}
