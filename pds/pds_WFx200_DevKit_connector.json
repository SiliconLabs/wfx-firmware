{
    "PIN_CONF_MSG": 
    {
        // =======================================================================
        // HEADER_ELT section contains information about this PDS version
        "HEADER_ELT_a" :
        {
            "VERSION_MAJOR_a" : 1,
            "VERSION_MINOR_b" : 3
        },
        // =======================================================================
        // PROG_PINS_CFG_ELT section sets the pad configuration of PROGrammable pins
        "PROG_PINS_CFG_ELT_b" :
        {               
            // For each PROGrammable pin in this section
            // SLEW_RATE_a sets the maximum slew rate on the pin. Type: integer value between 0 and 6 (6=max drive strength)
            // PULL_UP_DOWN_b allows to add a pull-up or pull-down on the pad. Type: enum = 'none', 'down', 'up'
            // SLEEP_CFG_c allows to add a pull-up or pull-down on the pad while in sleep mode. Type: enum = 'tri', 'down', 'up', 'maintain'
            //          for the case of pads used as gpio it is also possible to maintain the current driven gpio value
            // MODE_d allows to configure the pin in tristate, functionnal mode or gpio. Type: enum = 'tri', 'func', 'gpio' 
            // GPIO_ID_e allows to assign a GPIO_ID to a given pin when configured as gpio. Type = char must be an UPPER case letter
            "GPIO_FEM_1_a" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "A"
            },
            "GPIO_FEM_2_b" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "B"
            },
            "GPIO_FEM_3_c" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "C"
            },
            "GPIO_FEM_4_d" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "D"
            },
            "GPIO_FEM_5_e" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "E"
            },
            "GPIO_FEM_6_f" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "F"
            },
            "GPIO_PDET_g" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "G"
            },
            "GPIO_PTA_TX_CONF_h" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "H"
            },
            "GPIO_PTA_RF_ACT_i" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "I"
            },
            "GPIO_PTA_STATUS_j" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "J"
            },
            "GPIO_PTA_FREQ_k" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "K"
            },
            "GPIO_WUP_l" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "func",
                    "GPIO_ID_e" : "L"
            },
            "GPIO_WIRQ_m" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "M"
            },
            "RESERVE2_n" :
            {
                    "SLEW_RATE_a" : 4,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri",
                    "MODE_d" : "tri",
                    "GPIO_ID_e" : "O"
            }
        },
        // ======================================================================= 
        // HIF_PINS_CFG_ELT section sets the pad configuration of HIF pins
        "HIF_PINS_CFG_ELT_c" :
        {               
            // For each HIF pin in this section
            // SLEW_RATE_a sets the maximum slew rate on the pin. Type: integer value between 0 and 6 
            // PULL_UP_DOWN_b allows to add a pull-up or pull-down on the pad. Type: enum = 'none', 'down', 'up'
            // SLEEP_CFG_c allows to add a pull-up or pull-down on the pad while in sleep mode. Type: enum = 'tri', 'down', 'up'
            "SDIO_CLK_SPI_CLK_a" :
            {
                    "SLEW_RATE_a" : 6,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri"
            },
            "SDIO_CMD_SPI_MOSI_b" :
            {
                    "SLEW_RATE_a" : 6,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri"
            },
            "SDIO_D0_SPI_MISO_c" :
            {
                    "SLEW_RATE_a" : 6,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri"
            },
            "SDIO_D1_SPI_WIRQ_d" :
            {
                    "SLEW_RATE_a" : 6,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri"
            },
            "SDIO_D2_HIF_SEL_e" :
            {
                    "SLEW_RATE_a" : 6,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri"
            },
            "SDIO_D3_SPI_CSN_f" :
            {
                    "SLEW_RATE_a" : 6,
                    "PULL_UP_DOWN_b" : "none",
                    "SLEEP_CFG_c" : "tri"
            }
        }
    },
    
    
    "CLOCK_CONF_MSG":
    {
        "HF_CLK_e" :
        {
            // XTAL_CFG_a allows to fine tune XTAL Oscillator frequency
            // CTUNE_FIX_a allows to set a high value capacitance on both Xi and Xo. Type: interger between 0 and 3 (default =3)
            // CTUNE_XI_b allows to fine tune the capacitor on pin XTAL_I. Type: integer between 0 and 255 (default = 140)
            // CTUNE_XO_c similar to CTUNE_XI for XTAL_O pin
            "XTAL_CFG_a" :
            {
                    "CTUNE_FIX_a" : 3,
                    "CTUNE_XI_b" : 110,
                    "CTUNE_XO_c" : 110
            }
        }
    }
    
    "RF_CONF_MSG":
    {
        "RF_ANTENNA_SEL_DIV_CONF_j" :
        {
            // Antenna selection : Type: enum 'TX1_RX1', 'TX2_RX2', 'TX1_RX2', 'TX2_RX1' or 'TX1&2_RX1&2'
            "RF_PORTS_a" : "TX2_RX2",
            
            // Diversity control mode : Type: enum 'OFF', 'INTERNAL' or 'EXTERNAL'
            // for the 'INTERNAL' case then 'RF_PORTS_a' above must be set to 'TX1&2_RX1&2'
            "DIVERSITY_b" : "OFF",
            
            // External switch control antenna 
            /* Unused for EVB rev1.1
            "EXT_SWITCH_CONTROL_c" :
            {
                "NB_ANTENNA_a" : 3,
                "NB_GPIO_b" : 3,
                "GPIO_ID_1_c" : ["A", 1, 0, 0], // [GPIO_ID, State Antenna_1, State Antenna_2, State Antenna_3]  
                "GPIO_ID_2_d" : ["B", 0, 1, 0],
                "GPIO_ID_3_e" : ["C", 0, 0, 1]
            }
            */
        }
    },
    
    "TEST_CONF_MSG":
    {
        /* 
        "TEST_FEATURE_CFG_ELT_i":
        {
            // TEST_CHANNEL_a selects the Wi-Fi channel to use: integer between 1 and 14
            // TEST_MODE_b selects the activated test feature: enum = 'rx', 'tx_packet', 'tx_cw' 
            // TEST_IND_f period in ms at which an indication message is sent.
            //       In the case of rx test, it returns the measurement results (PER)
            // CFG_TX_CW_c : additional configuration for tx_cw mode
            // CFG_TX_PACKET_d : additional configuration for tx_packet mode
            // RX_e : additional configuration for rx mode
            "TEST_CHANNEL_a" : 11,
            "TEST_MODE_b"    : "tx_packet",
            "TEST_IND_f"     : 1000,

            // MODE_a CW mode: enum 'single' or 'dual'
            // FREQ1_b frequency offset -31 to 31 (in 312.5kHz)
            // FREQ2_c frequency offset -31 to 31 (in 312.5kHz)
            "CFG_TX_CW_c" :
            {
                "MODE_a" : "single",
                "FREQ1_b": 1,
                "FREQ2_c": 2
            },

            // FRAME_SIZE_BYTE_a frame size in byte (without CRC) from 25 to 4091
            // IFS_US_b interframe spacing in us from 0 to 255
            // HT_PARAM_c HT format (mixed mode or greenfield), enum: 'MM' or 'GF'
            // RATE_d rate selection, enum : 'B_1Mbps', 'B_2Mbps', 'B_5.5Mbps', 'B_11Mbps'
            //     'G_6Mbps', 'G_9Mbps', 'G_12Mbps', 'G_18Mbps', 'G_24Mbps', 'G_36Mbps', 'G_48Mbps', 'G_54Mbps'
            //     'N_MCS0', N_MCS1', N_MCS2', N_MCS3', N_MCS4', N_MCS5', N_MCS6', N_MCS7' 
            // NB_FRAME_e number of frames to send before stopping. 0 means infinite. integer from 0 to 65535.
            "CFG_TX_PACKET_d":
            {
                "FRAME_SIZE_BYTE_a" : 3000,
                "IFS_US_b" : 0,
                "HT_PARAM_c" : "MM",
                "RATE_d" : "N_MCS7",
                "NB_FRAME_e" : 0
            },
            
            "RX_e":
            {
            }
        }
        */
    }
    
    /*
    // Coexistence PTA configuration
    // 
    // This section can be commented if PTA is not used
    "PTA_CONF_MSG":
    {
        "PTA_CFG_ELT_k":
        {
            // PTA Mode selection
            //   : PTA MODE                           :       PINS REQUIRED               :
            //   :                                    : RF_ACT : STATUS :  FREQ  : TX_CONF:
            // 0 : No PTA                             :        :        :        :        :
            // 1 : 1-Wire with priority to Wi-Fi      :        :        :        :  OUT   :
            // 2 : 1-Wire with priority to Coex device:   IN   :        :        :        : 
            // 3 : 2-Wire                             :   IN   :        :        :  OUT   :
            // 4 : 3-Wire RGS, Request Grant Status   :   IN   :   IN   :        :  OUT   : 
            // 5 : 4-Wire                             :   IN   :   IN   :  IN    :  OUT   :
            // 8 : 3-Wire RGA, Request Grant Abort    :   IN   :        :  OUT   :  OUT   :
            //
            // Make sure according GPIO_PTA_x pin configuration are set to "func" in PROG_PINS_CFG_ELT 
            // Pins direction is automatically handled
            "MODE_a" : 0,
            
            // Indicate the kind of coexisting system        
            // 0 : BT classic 
            // 1 : BLE
            // 2 : 15.4
            "COEX_TYPE_b" : 0,
            
            // Invert PTA pins
            // 1 invert the signal on the particular PTA IO
            // bit 0 : invert PTA_RF_ACT  (input)
            // bit 1 : invert PTA_STATUS  (input)
            // bit 2 : invert PTA_FREQ    (input)
            // bit 3 : invert PTA_TX_CONF (input)
            // bit 4 : invert PTA_FREQ    (output)
            // bit 5 : invert PTA_TX_CONF (output)
            // bit ordering      b76543210
            "PTA_PIN_INVERT_c": "b00000000",
            
            
            
            // THIS SECTION BELOW IS TEMPORARY DURING PTA BRING UP
            // IT CONTAINS FORMER SDD FORMAT DATA
            // To be used to debug and build better interface for 
            // customer to use above
            "SDD_EPTA_FLAGS_s"                 : "b0000000000000000",
            //                                  |  ||    ||||||EnOverrideBt:1
            //                                  |  ||    |||||EnSimultaneousRx:1
            //                                  |  ||    ||||ExternalLna:1
            //                                  |  ||    |||EnMarvellMode:1
            //                                  |  ||    ||EnEnhancedVoiceProtection:1
            //                                  |  ||    |EnBleMode:1
            //                                  |  ||    EnDebugMode:1
            //                                  |  |ListenInterval:5
            //                                  |  EnIncreasedRtTypes3w:1
            //                                  Reserved:3
            "SDD_EPTA_SETTINGS_t"             : "b0011010000000000", 
            //                                  ||   |  ||     ResendIfFailure:1
            //                                  ||   |  |GlitchRmvLen:6
            //                                  ||   |  GrantWlanOverBt:1
            //                                  ||   ExcellentBtQualPct:3
            //                                  |GoodBtQualPct:4
            //                                  Reserved:1
            "SDD_EPTA_INTERFACE_CONFIG1_1_u": "b1000010001000001",
            //                                  |   |    |    |
            //                                  |   |    |    PriorityPeriodicityStart:2
            //                                  |   |    PriorityPeriod:5
            //                                  |   PeriodicityPeriod:5
            //                                  LinkIdPeriod:4
            "SDD_EPTA_INTERFACE_CONFIG1_2_v": "b0010010000101000",
            //                                  | |      |
            //                                  | |      FreqSampleTime:7;
            //                                  | TxConfxValidTime:7
            //                                  Reserved:2
            //                                            
            "SDD_EPTA_INTERFACE_CONFIG2_1_w": "b1000110010010110",
            //                                  |       |    
            //                                  |       T1Min:8
            //                                  SlotDelay:8
            "SDD_EPTA_INTERFACE_CONFIG2_2_x": "b1001101100110010",
            //                                  |         |    
            //                                  |         Slot0TxRxSampleTime:6;
            //                                  SlotTxRxSampleTime:10
            
            "SDD_EPTA_INTERFACE_CONFIG3_1_y": "b0000000000000101",
            //                                  |           | |
            //                                  |           | NbLinkidBits:2
            //                                  |           NbPriorityBits:2;
            //                                  Reserved:12
            "SDD_EPTA_INTERFACE_CONFIG3_2_z": "b0000000000000000",
            //                                  |      ||     EnWlToBtSwitchDelay:1
            //                                  |      |WlToBtSwitchDelayValue:7
            //                                  |      EnBtToWlSwitchDelay:1;
            //                                  BtToWlSwitchDelayValue:7;
        }
    }
    */
}
